#!/usr/bin/env bash
set -eu

error() { echo >&2 "$@"; false; }

jarFile=$({ cat args-jar || ls target/giraph-debugger-*.jar | head -n 1; } 2>/dev/null)

# use ./giraph-debug in place of hadoop jar when using graft
case $debugConfig in
    none)
        cmd=(
        hadoop jar
        )
        ;;
    *)
        cmd=(
        ./giraph-debug
        $(cat args-giraph-debug 2>/dev/null || true)
        )
esac

# make sure input and output is possible
inputPath=graphs/$graph
outputPath=outputs/$algo/$graph/$_3X_RUN/
outputPathParent=$(dirname "$outputPath")
hadoop fs -test -e $inputPath ||
    error "$inputPath: Graph not found on HDFS"
hadoop fs -test -e $outputPathParent ||
    hadoop fs -mkdir $outputPathParent

# Java VM options for each worker
jvmOpts=(
-Xmx${workerMem:-1g}
-XX:+UseParallelGC
-XX:+PrintGC
-XX:+PrintGCTimeStamps
-XX:+PrintGCDetails
)

# construct list of command-line arguments for GiraphRunner
giraphRunnerArgs=(
$(cat args-algo)
"$@"

-vip $inputPath
-vof org.apache.giraph.io.formats.IdWithValueTextOutputFormat
-op $outputPath

-w ${numWorkers:-1}

# some Giraph/Hadoop configurations to make the runs smoother
-ca mapred.map.child.java.opts="${jvmOpts[*]}"
#-ca mapreduce.job.counters.limit=100000
-ca giraph.useSuperstepCounters=false
)

# make sure the job we launch below is killed when interrupted
cleanup() {
    jobid=$(set +x; grep <../stderr "[m]apred.JobClient: Running job: job_.*" | sed 's/.* Running job: //')
    [ -z "$jobid" ] || hadoop job -kill $jobid
    exit 255
}
trap cleanup INT QUIT TERM

# make sure no jobs are running before launching a new one
hadoop job -list | grep '^job_' | awk '{print $1}' | xargs -L1 --no-run-if-empty --verbose hadoop job -kill

# clean up dangling VMs on all slaves before launching a new job
foreach-hadoop-slaves 'ps x | grep "[j]ava" | grep -Ev "[-]Dproc_(datanode|tasktracker)" | awk "{print \$1}" | xargs --no-run-if-empty --verbose kill -KILL' || true

# launch a job
set -x
"${cmd[@]}" "$jarFile" \
    org.apache.giraph.GiraphRunner "${giraphRunnerArgs[@]}"
